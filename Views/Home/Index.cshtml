@model GlobalTemp.Models.CityModel

@{
    ViewData["title2"] = "";
}

<div>
    <div class="card text-white bg-primary mb-3" style="max-width: 40rem;">

        <div class="card-header text-center">
            <h4 class="title1">Gobal Guide</h4>
            <p class="title2">Get current data on any city in the world v5.1</p>
        </div>

        @{
            string cityDpy = String.Empty;
            string ctryDpy = String.Empty;
            if (Model != null)
            {

                if (!String.IsNullOrEmpty(Model.CityName))
                {
                    cityDpy += Model.CityName;
                }

                if (!String.IsNullOrEmpty(Model.CountryName))
                {
                    ctryDpy += Model.CountryName;
                }

                string ctryFlagUrl = String.Empty;
                if (String.IsNullOrEmpty(Model.countryFlagUrl) == false)
                {
                    ctryFlagUrl = @Model.countryFlagUrl;
                }

                string cityTempDpyF = String.Empty;
                string cityTempDpyC = String.Empty;
                if (float.IsNaN(Model.TemperatureVal) == false)
                {
                    double cityTempValF = @Model.TemperatureVal;
                    // " °F"
                    cityTempDpyF = cityTempValF.ToString("0.#") + " °F";
                    double cityTempValC = 5.0 * (cityTempValF - 32.0) / 9.0;
                    cityTempDpyC = cityTempValC.ToString("0.#") + " °C";
                }

                string sunriseDpy = String.Empty;
                if (Model.SunriseDT != null)
                {
                    // 4/13/2021 2:29:21 AM
                    sunriseDpy = Model.SunriseDT.ToString();
                    sunriseDpy = sunriseDpy.Substring(sunriseDpy.IndexOf('\u0020') + 1);
                    int idxFinalColon = sunriseDpy.LastIndexOf(":");
                    if (idxFinalColon > 0)
                    {
                        sunriseDpy = sunriseDpy.Remove(idxFinalColon, 3);
                    }
                }

                string sunsetDpy = String.Empty;
                if (Model.SunsetDT != null)
                {
                    // 4/13/2021 6:29:41 PM
                    sunsetDpy = Model.SunsetDT.ToString();
                    sunsetDpy = sunsetDpy.Substring(sunsetDpy.IndexOf('\u0020') + 1);
                    int idxFinalColon = sunsetDpy.LastIndexOf(":");
                    if (idxFinalColon > 0)
                    {
                        sunsetDpy = sunsetDpy.Remove(idxFinalColon, 3);
                    }
                }

                string curDateDpy = String.Empty;
                string curTimeDpy = String.Empty;
                if (Model.DateTimeNow != null)
                {
                    string tempStr = Model.DateTimeNow.ToString("yyyy-MM-dd hh:mm tt");
                    curDateDpy = tempStr.Substring(0, tempStr.IndexOf('\u0020')) + " " + Model.DateTimeNow.DayOfWeek.ToString().Substring(0,3);
                    curTimeDpy = tempStr.Substring(tempStr.IndexOf('\u0020') + 1);
                }

                string currencyCode = String.Empty;
                string currencyConv = String.Empty;
                string currencySymbol = String.Empty;
                string currencyName = String.Empty;
                if (String.IsNullOrEmpty(Model.CurrencyCode) == false)
                {
                    currencyCode = Model.CurrencyCode;


                    if (String.IsNullOrEmpty(Model.CurrencySymbol) == false)
                    {
                        currencySymbol = Model.CurrencySymbol;
                    }

                    if (float.IsNaN(Model.CurrencyVal) == false)
                    {
                        currencyConv = "1 US$ = " + Model.CurrencyVal.ToString("0.00") + " " + currencySymbol;
                    }

                    if (String.IsNullOrEmpty(Model.CurrencyName) == false)
                    {
                        currencyName = Model.CurrencyName.Split(' ').Last();
                        currencyName = currencyName.Substring(0, 1).ToUpper() + currencyName.Substring(1);
                    }
                }


                string errMsgToUser = Model.ErrMsgToUser;
                bool errFlag = !string.IsNullOrEmpty(errMsgToUser);


                <div class="card-body text-center" style="padding:0px 0px 0px 0px">

                    <table class="table table-bordered">
                                <tbody>
                                    @if (errFlag == false)
                                    {
                                        <tr>
                                            <td class="title2">City</td>
                                            <td class="data align-middle" colspan="1">@cityDpy</td>
                                            @if (string.IsNullOrEmpty(ctryFlagUrl) == false)
                                            {
                                                <td rowspan="2"><img src="@ctryFlagUrl" alt="Image here"/></td>
                                            }
                                        </tr>

                                        <tr>
                                            <td class="title2">Country</td>
                                            <td class="data">@ctryDpy</td>
                                        </tr>

                                        <tr>
                                            <td class="title2">@cityDpy Time</td>
                                            <td id="cityDate" class="data">@curDateDpy</td>
                                            <td id="cityTime" class="data">@curTimeDpy</td>
                                        </tr>

                                        <tr>
                                            <td class="title2">Your Time</td>
                                            <td id="clientDate" class="data"></td>
                                            <td id="clientTime" class="data"></td>
                                        </tr>

                                        <tr>
                                            <td class="title2">Temperature</td>
                                            <td class="data">@cityTempDpyC</td>
                                            <td class="data">@cityTempDpyF</td>
                                        </tr>


                                        <tr>
                                            <td class="title2">Sun Rise/Set</td>
                                            <td class="data">@sunriseDpy</td>
                                            <td class="data">@sunsetDpy</td>
                                        </tr>

                                        <tr>
                                            <td class="title2">Currency</td>
                                            <td class="data">@currencySymbol : @currencyName</td>
                                            <td class="data">@currencyConv</td>
                                        </tr>


                                    }

                                    @if (errFlag)
                                    {
                                        <tr>
                                            <td class="title2">Message</td>
                                            <td class="data" colspan="2">@errMsgToUser</td>
                                        </tr>

                                    }

                                </tbody>
                    </table>

                </div>







            }
        }

        @using (Html.BeginForm("Index", "Home", FormMethod.Post))
        {
            <table class="table" style="margin: 0px;">
                <tbody>
                    <tr>
                        <td colspan="2"><label class="title2">Enter just the name of a city</label></td>
                    </tr>
                    <tr>
                        <td>@Html.TextBoxFor(m => m.CityNameFromUser, new { @class = "text-center" })</td>
                        <td><input type="submit" value="Submit" /></td>
                    </tr>
                </tbody>
            </table>
        }

    </div>
</div>
